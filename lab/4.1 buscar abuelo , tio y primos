//pintar tios primos, c/uno con color distinto

bool abu_tio(int n) {
    nodo** p;
    p = &root;
    nodo** q = &((*p)->nodos[0]);
    nodo** r = &((*p)->nodos[1]);
    if ((*p) && (*p)->v != n) {
        if ((*p)->v > n) {
            if (*q && (*q)->v != n) {
                nodo** q1 = &((*q)->nodos[(*q)->v < n]);
                while (*q1 && (*q1)->v != n) {
                    p = q;
                    q = q1;
                    q1 = &((*q1)->nodos[(*q1)->v < n]);
                }
                if (*q1 && (*q1)->v == n) {
                    std::cout << (*p)->v << "\n"; // abue  
                    if ((*p)->nodos[(*r)->v > n]) {
                        std::cout << (*p)->nodos[(*q)->v > n]->v << "\n"; // tio 
                        if ((*p)->nodos[(*r)->v > n]->nodos[0]) {
                            std::cout << (*p)->nodos[(*q)->v > n]->nodos[0]->v << "\n"; // primo 
                        }
                        if ((*p)->nodos[(*r)->v > n]->nodos[1]) {
                            std::cout << (*p)->nodos[(*q)->v > n]->nodos[1]->v << "\n"; // prima  
                        }
                    }
                        
                }
                else {

                }
            }
            
        }
        else {
            if (*r && (*r)->v != n) {
                nodo** r1 = &((*r)->nodos[(*r)->v < n]);
                while (*r1 && (*r1)->v != n)
                {
                    p = r;
                    r = r1;
                    r1 = &((*r1)->nodos[(*r1)->v < n]);
                }
                if (*r1 && (*r1)->v == n)
                {
                    std::cout << (*p)->v << "\n"; // abue   
                    if ((*p)->nodos[(*r)->v > n]) {
                        std::cout << (*p)->nodos[(*r)->v > n]->v << "\n"; // tio  
                        if ((*p)->nodos[(*r)->v > n]->nodos[0]) {
                            std::cout << (*p)->nodos[(*r)->v > n]->nodos[0]->v << "\n"; // primo 
                        }
                        if ((*p)->nodos[(*r)->v > n]->nodos[1]) {
                            std::cout << (*p)->nodos[(*r)->v > n]->nodos[1]->v << "\n"; // prima  
                        }
                    }
                         
                }
                else {
                }
            }
            
        }
    }
    else
        return 0;
}
